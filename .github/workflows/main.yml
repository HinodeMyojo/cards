name: Pleiades-server
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Добавление SSH key
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p /home/runner/.ssh
            ssh-keyscan ${{ secrets.SSH_HOST }} >> /home/runner/.ssh/known_hosts
            echo "${{ secrets.SSH_KEY }}" > /home/runner/.ssh/github_actions
            chmod 600 /home/runner/.ssh/github_actions
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-add /home/runner/.ssh/github_actions

      - name: Клонирование репозитория на удаленный сервер
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Проверяем, существует ли директория..."
            if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
              echo "Работаем с веткой dev..."
              TARGET_DIR="/var/www/pleiades-server-dev"
            else
              echo "Работаем с веткой main..."
              TARGET_DIR="/var/www/pleiades-server"
            fi

            echo "Проверяем, существует ли директория $TARGET_DIR..."
            if [ -d "$TARGET_DIR" ]; then
              echo "Удаляем содержимое директории $TARGET_DIR..."
              sudo rm -rf $TARGET_DIR/*
              sudo rm -rf $TARGET_DIR/.*
            fi

            echo "Клонируем репозиторий в $TARGET_DIR..."
            git clone https://github.com/HinodeMyojo/cards-server.git $TARGET_DIR


      - name: Деплой сервера
        uses: appleboy/ssh-action@v0.1.6
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /var/www/pleiades-server/
            
            # Проверяем ветку
            if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
              echo "Работаем с веткой dev..."
              docker-compose -f docker-compose-dev.yml down
              docker system prune -f
              echo "Билдим и стартуем новые контейнеры для dev..."
              CONNECTION_STRING=${{ secrets.DEV_CONNECTION_STRING }} docker-compose -f docker-compose-dev.yml up -d --build
            else
              echo "Работаем с веткой main..."
              docker-compose -f docker-compose-prod.yml down
              docker system prune -f
              echo "Билдим и стартуем новые контейнеры для main..."
              CONNECTION_STRING=${{ secrets.CONNECTION_STRING }} docker-compose -f docker-compose-prod.yml up -d --build
